<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unity3d on Modern C# in Unity3D</title><link>/tags/unity3d/</link><description>Recent content in unity3d on Modern C# in Unity3D</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/unity3d/index.xml" rel="self" type="application/rss+xml"/><item><title>Dependency Injection on Unity (Part 2)</title><link>/post/dependency-injection-on-unity-part2/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>/post/dependency-injection-on-unity-part2/</guid><description>This is the long-awaited continuation of my previous post about dependency injection.</description></item><item><title>Dependency Injection on Unity</title><link>/post/dependency-injection-on-unity/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>/post/dependency-injection-on-unity/</guid><description>Many has been written about dependency injection, even Unity folks wrote about it long time ago, and there are some good frameworks like Zenject, so what is so cool about dependency injection?</description></item></channel></rss>